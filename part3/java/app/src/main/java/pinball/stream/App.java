/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package pinball.stream;

import io.confluent.kafka.streams.serdes.json.KafkaJsonSchemaSerde;
import org.apache.kafka.common.serialization.Serdes;
import org.apache.kafka.streams.KafkaStreams;
import org.apache.kafka.streams.kstream.Consumed;
import org.apache.kafka.streams.StreamsBuilder;
import org.apache.kafka.streams.kstream.Produced;
import pinball.stream.domain.ScoreRecord;

import java.util.Properties;


public class App {
    private static final String INPUT_TOPIC = "pinball.scores";
    private static final String OUTPUT_TOPIC = "pinball.highscores";

    public void run() {
        var props = new Properties();

        var builder = new StreamsBuilder();
        var outputSerde = new KafkaJsonSchemaSerde<ScoreRecord>();
        var stream = builder.stream(INPUT_TOPIC, Consumed.with(Serdes.Integer(), Serdes.Integer()));
        stream.mapValues(value -> new ScoreRecord(value))
            .to(OUTPUT_TOPIC, Produced.with(Serdes.Integer(), outputSerde));

        var app = new KafkaStreams(builder.build(), props);
        app.start();

        Runtime.getRuntime().addShutdownHook(new Thread(app::close));
    }

    public static void main(String[] args) {
        new App().run();
    }
}
